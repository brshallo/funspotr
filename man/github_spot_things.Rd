% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/github-spot.R
\name{github_spot_pkgs}
\alias{github_spot_pkgs}
\alias{github_spot_funs}
\alias{github_spot_things}
\title{Spot Packages or Functions from Github Repository}
\usage{
github_spot_pkgs(repo, branch = "main", preview_urls = FALSE, rmv_index = TRUE)

github_spot_funs(repo, branch = "main", preview_urls = FALSE, rmv_index = TRUE)
}
\arguments{
\item{repo}{Github repository, e.g. "brshallo/feat-eng-lags-presentation"}

\item{branch}{Branch of github repository, default is "main".}

\item{preview_urls}{Logical, if set to \code{TRUE} will print urls that will be
passed through \code{spot_funs()} or \code{spot_pkgs()}}

\item{rmv_index}{Logical, most repos containing blogdown sites will have an
index.R file. By default these are removed from list of files.}
}
\value{
Dataframe with \code{contents} and \code{urls} of file paths along with a
list-column \code{spotted} containing packages or functions & packages used in
each file.
}
\description{
\code{github_spot_pkgs()} : Spot all packages that show-up in R or Rmarkdown
documents in the github repository.
}
\details{
\code{github_spot_funs()} : Spot all functions and their corresponding packages that
show-up in R or Rmarkdown documents in the github repository.

Meant for cases where packages and scripts are in \emph{the same} file, in cases
where this is not the case will need to build an alternative workflow. See
unexported functions in R/github-spot.R for some potentially helpful building
blocks.
}
\examples{
library(funspotr)

github_spot_funs("brshallo/feat-eng-lags-presentation", branch = "main")
}
\seealso{
spot_pkgs spot_funs
}
