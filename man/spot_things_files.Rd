% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spot-files.R
\name{spot_funs_files}
\alias{spot_funs_files}
\alias{spot_pkgs_files}
\alias{spot_things_files}
\title{Spot Packages or Functions in File Paths}
\usage{
spot_funs_files(df, ...)

spot_pkgs_files(df, ...)
}
\arguments{
\item{df}{Dataframe containing a column of \code{absolute_paths}.}

\item{...}{Arguments passed onto \verb{spot_\{pkgs|funs\}()}.}
}
\value{
Dataframe with \code{relative_paths} and \code{absolute_paths} of file paths
along with a list-column \code{spotted} containing \code{purrr::safely()} lists of
"result" and "error" for each file parsed. Use \code{unnest_results()}
to unnest only the "result" values.
}
\description{
\code{spot_pkgs_files()} : Spot all packages that show-up in R or Rmarkdown
documents in a dataframe of filepaths.
}
\details{
\code{spot_funs_files()} : Spot all functions and their corresponding packages
that show-up in R or Rmarkdown documents in a dataframe of filepaths.

A \code{purrr::safely()} wrapper for mapping \code{spot_pkgs()} or \code{spot_funs()} across
multiple filepaths.

Defaults are meant for files where package libraries are referenced \emph{within}
the files themselves.
}
\examples{
\dontrun{
library(funspotr)
library(dplyr)

list_files_github_repos("brshallo/feat-eng-lags-presentation", branch = "main", preview = TRUE) \%>\%
  spot_funs_files()
}
}
\seealso{
\code{\link[=spot_pkgs]{spot_pkgs()}}, \code{\link[=spot_funs]{spot_funs()}}, \code{\link[=unnest_results]{unnest_results()}}
}
