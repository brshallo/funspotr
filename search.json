[{"path":"https://brshallo.github.io/funspotr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bryan Shalloway. Author, maintainer.","code":""},{"path":"https://brshallo.github.io/funspotr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shalloway B (2022). funspotr: Identify Functions & Packages Files. R package version 0.0.0.9000, https://brshallo.github.io/funspotr/.","code":"@Manual{,   title = {funspotr: Identify Functions & Packages in Files},   author = {Bryan Shalloway},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://brshallo.github.io/funspotr/}, }"},{"path":"https://brshallo.github.io/funspotr/index.html","id":"funspotr","dir":"","previous_headings":"","what":"Identify Functions & Packages in Files","title":"Identify Functions & Packages in Files","text":"goal funspotr (R function spotter) make easy identify functions packages used files. initially written map functions packages used popular github repositories (see brshallo/funspotr-examples associated blog post post parsing gists). funspotr primarily designed self-contained scripts (see Package dependencies another file). Also, may identify every function /package (see Limitations, Problems, Musings) read source code details.","code":""},{"path":"https://brshallo.github.io/funspotr/index.html","id":"spot-functions-in-a-file","dir":"","previous_headings":"","what":"Spot functions in a file","title":"Identify Functions & Packages in Files","text":"primary function funspotr spot_funs() returns dataframe showing functions associated packages used file. funs: function used script pkgs: best guess package came in_multiple_pkgs : Whether function multiple packages/environments ’s (guessed) search space. default package top search space returned[1].","code":"library(funspotr) library(dplyr)  file_lines <- \" library(dplyr) require(tidyr)  as_tibble(mpg) %>%    mutate(class = as.character(class)) %>%   group_by(class) %>%   nest() %>%   mutate(stats = purrr::map(data,                             ~lm(cty ~ hwy, data = .x)))   made_up_fun() \"  file_output <- tempfile(fileext = \".R\") writeLines(file_lines, file_output)  spot_funs(file_path = file_output) #> # A tibble: 10 x 3 #>    funs         pkgs      in_multiple_pkgs #>    <chr>        <chr>     <lgl>            #>  1 library      base      FALSE            #>  2 require      base      FALSE            #>  3 as_tibble    tidyr     TRUE             #>  4 mutate       dplyr     FALSE            #>  5 as.character base      FALSE            #>  6 group_by     dplyr     FALSE            #>  7 nest         tidyr     FALSE            #>  8 map          purrr     FALSE            #>  9 lm           stats     FALSE            #> 10 made_up_fun  (unknown) FALSE"},{"path":"https://brshallo.github.io/funspotr/index.html","id":"spot-functions-in-a-github-repo","dir":"","previous_headings":"","what":"Spot functions in a github repo","title":"Identify Functions & Packages in Files","text":"github_spot_funs() wrapper spot_funs() maps across R Rmarkdown files github repository. contents : filepath github repo urls: URL raw file github spotted: purrr::safely() style list-column results mapping spot_funs() across urls[2]. results may unnested helper funspotr::unnest_github_results() provide table functions packages used. can manipulated like dataframe – say want filter files , readr rsample packages used. outputs funspotr::unnest_github_results() can also passed funspotr::network_plot() visualize connections functions/packages files.","code":"# repo for an old presentation I gave gh_ex <- github_spot_funs(   repo = \"brshallo/feat-eng-lags-presentation\",    branch = \"main\")  gh_ex #> # A tibble: 5 x 3 #>   contents                         urls                               spotted    #>   <chr>                            <chr>                              <list>     #> 1 R/Rmd-to-R.R                     https://raw.githubusercontent.com~ <named li~ #> 2 R/feat-engineering-lags.R        https://raw.githubusercontent.com~ <named li~ #> 3 R/load-inspections-save-csv.R    https://raw.githubusercontent.com~ <named li~ #> 4 R/types-of-splits.R              https://raw.githubusercontent.com~ <named li~ #> 5 feat-eng-lags-presentation.Rproj https://raw.githubusercontent.com~ <named li~ gh_ex %>%    unnest_github_results() %>%    filter(pkgs %in% c(\"here\", \"readr\", \"rsample\")) #> # A tibble: 8 x 5 #>   funs               pkgs    in_multiple_pkgs contents      urls                 #>   <chr>              <chr>   <lgl>            <chr>         <chr>                #> 1 here               here    FALSE            R/Rmd-to-R.R  https://raw.githubu~ #> 2 read_csv           readr   FALSE            R/feat-engin~ https://raw.githubu~ #> 3 initial_time_split rsample TRUE             R/feat-engin~ https://raw.githubu~ #> 4 training           rsample TRUE             R/feat-engin~ https://raw.githubu~ #> 5 testing            rsample TRUE             R/feat-engin~ https://raw.githubu~ #> 6 sliding_period     rsample TRUE             R/feat-engin~ https://raw.githubu~ #> 7 write_csv          readr   FALSE            R/load-inspe~ https://raw.githubu~ #> 8 here               here    FALSE            R/load-inspe~ https://raw.githubu~"},{"path":"https://brshallo.github.io/funspotr/index.html","id":"previewing-and-customizing-files-to-parse","dir":"","previous_headings":"Spot functions in a github repo","what":"Previewing and customizing files to parse","title":"Identify Functions & Packages in Files","text":"can set preview = TRUE github_spot_funs() first view files intend parse. can pass custom set urls inputting dataframe argument custom_urls – may output previous call preview = TRUE. examle, say want parse “types--splits.R” “Rmd--R.R” files. custom_urls argument works situation want map spot_funs() across set filepaths URLs. E.g. see example github_gists() case argument used parse functions/packages specified github user’s gists.","code":"preview_files <- github_spot_funs(   repo = \"brshallo/feat-eng-lags-presentation\",    branch = \"main\",   preview = TRUE)  preview_files #> # A tibble: 5 x 2 #>   contents                         urls                                          #>   <chr>                            <chr>                                         #> 1 R/Rmd-to-R.R                     https://raw.githubusercontent.com/brshallo/f~ #> 2 R/feat-engineering-lags.R        https://raw.githubusercontent.com/brshallo/f~ #> 3 R/load-inspections-save-csv.R    https://raw.githubusercontent.com/brshallo/f~ #> 4 R/types-of-splits.R              https://raw.githubusercontent.com/brshallo/f~ #> 5 feat-eng-lags-presentation.Rproj https://raw.githubusercontent.com/brshallo/f~ preview_files %>%    filter(stringr::str_detect(contents, \"types-of-splits|Rmd-to-R\")) %>%    github_spot_funs(custom_urls = .) %>%    unnest_github_results() #> # A tibble: 24 x 5 #>    funs      pkgs      in_multiple_pkgs contents            urls                 #>    <chr>     <chr>     <lgl>            <chr>               <chr>                #>  1 purl      knitr     FALSE            R/Rmd-to-R.R        https://raw.githubu~ #>  2 here      here      FALSE            R/Rmd-to-R.R        https://raw.githubu~ #>  3 library   base      FALSE            R/types-of-splits.R https://raw.githubu~ #>  4 theme_set ggplot    FALSE            R/types-of-splits.R https://raw.githubu~ #>  5 theme_bw  ggplot    FALSE            R/types-of-splits.R https://raw.githubu~ #>  6 set.seed  base      FALSE            R/types-of-splits.R https://raw.githubu~ #>  7 tibble    dplyr     TRUE             R/types-of-splits.R https://raw.githubu~ #>  8 rep       base      FALSE            R/types-of-splits.R https://raw.githubu~ #>  9 today     lubridate FALSE            R/types-of-splits.R https://raw.githubu~ #> 10 days      lubridate FALSE            R/types-of-splits.R https://raw.githubu~ #> # ... with 14 more rows"},{"path":"https://brshallo.github.io/funspotr/index.html","id":"files-you-didnt-write","dir":"","previous_headings":"","what":"Files you didn’t write","title":"Identify Functions & Packages in Files","text":"Functions created file well functions unavailable packages (packages don’t exist) output pkgs = \"(unknown)\". spot package function must package installed locally. Hence files others’ github repos created different machine, good idea start funspotr::check_pkgs_availability() see packages missing. quick helper installing missing packages (see “R/spot-pkgs.R” documentation): Alternatively, may want clone repository locally use renv::dependencies() start using funspotr. renv robust approach finding installing dependencies – particularly cases missing many dependencies don’t want alter packages global library.","code":"file_lines_missing_pkgs <- \" library(dplyr)  as_tibble(mpg)  hello_world <- function() print('hello world')  madeuppkg::made_up_fun()  hello_world() \"  missing_pkgs_ex <- tempfile(fileext = \".R\") writeLines(file_lines_missing_pkgs, missing_pkgs_ex)  spot_funs(file_path = missing_pkgs_ex) #> # A tibble: 5 x 3 #>   funs        pkgs      in_multiple_pkgs #>   <chr>       <chr>     <lgl>            #> 1 library     base      FALSE            #> 2 as_tibble   dplyr     FALSE            #> 3 print       base      FALSE            #> 4 made_up_fun (unknown) FALSE            #> 5 hello_world (unknown) FALSE check_pkgs_availability(file_path) %>%    funspotr:::install_missing_pkgs()"},{"path":[]},{"path":"https://brshallo.github.io/funspotr/index.html","id":"package-dependencies-in-another-file","dir":"","previous_headings":"","what":"Package dependencies in another file","title":"Identify Functions & Packages in Files","text":"spot_funs() currently set-self-contained files. spot_funs_custom() allows user explicitly specify pkgs functions may come . useful cases packages loaded location file_path (e.g. loaded via source() DESCRIPTION file, workflow). example, made-example library() calls made separate file source()d . Also see funspotr:::spot_pkgs_from_DESCRIPTION().","code":"# file where packages are loaded file_libs <- \"library(dplyr) library(lubridate)\"  file_libs_output <- tempfile(fileext = \".R\") writeLines(file_libs, file_libs_output)  # File of interest where things happen file_run <- glue::glue( \"source('{ file_libs_output }')    tibble::tibble(days_from_today = 0:10) %>%      mutate(date = today() + days(days_from_today)) \",  file_libs_output = stringr::str_replace_all(file_libs_output, \"\\\\\\\\\", \"/\") )  file_run_output <- tempfile(fileext = \".R\") writeLines(file_run, file_run_output)  # Identify packages using both files and then pass in explicitly to `spot_funs_custom()` pkgs <- c(spot_pkgs(file_libs_output),            spot_pkgs(file_run_output, show_explicit_funs = TRUE))  spot_funs_custom(   pkgs = pkgs,   file_path = file_run_output) #> # A tibble: 5 x 3 #>   funs   pkgs      in_multiple_pkgs #>   <chr>  <chr>     <lgl>            #> 1 source base      FALSE            #> 2 tibble tibble    TRUE             #> 3 mutate dplyr     FALSE            #> 4 today  lubridate FALSE            #> 5 days   lubridate FALSE"},{"path":"https://brshallo.github.io/funspotr/index.html","id":"show-all-function-calls","dir":"","previous_headings":"","what":"Show all function calls","title":"Identify Functions & Packages in Files","text":"Passing show_each_use = TRUE ... get_funs() github_spot_funs() return instances function call rather just file. Compared initial example, mutate() now shows-rows 4 8:","code":"spot_funs(file_path = file_output, show_each_use = TRUE) #> # A tibble: 11 x 3 #>    funs         pkgs      in_multiple_pkgs #>    <chr>        <chr>     <lgl>            #>  1 library      base      FALSE            #>  2 require      base      FALSE            #>  3 as_tibble    tidyr     TRUE             #>  4 mutate       dplyr     FALSE            #>  5 as.character base      FALSE            #>  6 group_by     dplyr     FALSE            #>  7 nest         tidyr     FALSE            #>  8 mutate       dplyr     FALSE            #>  9 map          purrr     FALSE            #> 10 lm           stats     FALSE            #> 11 made_up_fun  (unknown) FALSE"},{"path":"https://brshallo.github.io/funspotr/index.html","id":"helper-for-blogdown-tags","dir":"","previous_headings":"","what":"Helper for blogdown tags","title":"Identify Functions & Packages in Files","text":"Setting as_yaml_tags = TRUE spot_pkgs() flattens dependencies outputs format can copied pasted tags section blogdown post’s YAML header. spot_pkgs_used() return packages functions actually used[3]. automatically packages used tags post can add function funspotr::spot_tags() tags argument YAML header. example: See (blogdown#647) explanation.","code":"# Example from old blogdown post spot_pkgs(   file_path = \"https://raw.githubusercontent.com/brshallo/brshallo/master/content/post/2020-02-06-maximizing-magnetic-volume-the-perfect-bowl.Rmd\",   as_yaml_tags = TRUE) %>%    cat() #>   - knitr #>   - tidyverse #>   - ggforce --- title: This is a post author: brshallo date: '2022-02-11' tags: [\"funspotr\", \"dplyr\", \"tidyr\", \"purrr\", \"stringr\", \"madeuppkg\", \"lubridate\", \"glue\", \"tibble\"] slug: this-is-a-post ---"},{"path":"https://brshallo.github.io/funspotr/index.html","id":"unexported-functions","dir":"","previous_headings":"","what":"Unexported functions","title":"Identify Functions & Packages in Files","text":"Many unexported functions (“R/github-spot.R” particular) may helpful building workflows mapping spot_funs() across multiple files[4] suggestion function set functions spotting functions, feel free open issue.","code":""},{"path":"https://brshallo.github.io/funspotr/index.html","id":"how-funspotrspot_funs-works","dir":"","previous_headings":"","what":"How funspotr::spot_funs() works","title":"Identify Functions & Packages in Files","text":"high-level… Create new R instance using callr Load packages. Explicit calls (e.g. pkg::fun()) loaded individually via import loaded last (putting top search space)[5]. (steps 1 2 needed step 4 best chance identifying package function comes file.) Pass file utils::getParseData() filter just functions (inspired NCmisc::list.functions..file()) Pass functions utils::find() identify associated package","code":""},{"path":"https://brshallo.github.io/funspotr/index.html","id":"limitations-problems-musings","dir":"","previous_headings":"","what":"Limitations, Problems, Musings","title":"Identify Functions & Packages in Files","text":"file contains R syntax well defined parsed return error. See formatR (used {funspotr} parsing) common reasons failure. knitr::read_chunk() knitr::purl() file passed {funspotr} also frequently cause error parsing. See knitr#1753 & knitr#1938 Please open issue find cases breaks :-) . mentioned elsewhere, default parsing spot_funs() primarily cases package dependencies loaded file used [6]. Scripts self-contained typically pkgs argument provided explicitly via spot_funs_custom(). funspotr pay attention functions reexported elsewhere. example, many tibble functions reexported dplyr tidyr – funspotr though know true home functions simply looking top search space[7]. Feel free open issue ’d interested simplifying function vignette mapping spot_funs() local repos folder structures github respositories (already covered github_spot_funs())[8] functions “R/spot-pkgs.R” probably better handled something like renv::dependencies() parsing based approach. simple regex’s use variety problems. just one example funspotr::get_pkgs() recognize package within quotes escaped[9]. `funspotr’s current approach slow Current approach uses imperfect heuristics identify infix operators, e.g. + (maybe fine though) funspotr lots dependencies. may make sense move non-core functionality separate package (e.g. everything “R/github-spot.R”) may made sense github_get_funs() clone repo locally rather pointing URL’s parse file. Currently possible github block pretty soon due hitting many files (case ’ll likely get 403 connection error). things probably done reduce number github API hits (e.g. bullet, Sys.sleep(), …). Throughout code package documentation “inspiration” bullets followed link pointing places took stuff stack overflow, github, packages","code":""},{"path":"https://brshallo.github.io/funspotr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identify Functions & Packages in Files","text":"can install development version funspotr GitHub : [1] E.g. as_tibble() attributed tidyr spot_funs() however as_tibble() also dplyr. don’t worry getting root source package fact packages just reexporting tibble. Setting keep_search_list = TRUE return rows item search list may helpful getting unexpected results.) [2] file parsed purrr::safely() list-column output item list containing result error. [3] E.g. cases library calls aren’t actually used file. may useful cases metapackages like tidyverse tidymodels loaded packages actually used. [4] unexported functions funspotr still include man file least partial documentation. [5] heuristic imperfect means file “library(dplyr); select(); MASS::select()” view select() calls coming {MASS} – view first coming {dplyr} second {MASS}. [6] .e. interactive R scripts Rmd documents use library() related calls within script. [7] example reviewing David Robinson’s Tidy Tuesday code found meme package used far expected. Turns just due reexporting aes() function ggplot. [8] E.g. mapping across local repository, across package, data workflow, etc. [9] e.g. case lines <- \"library(pkg)\" pkg show-dependency despite just part quote rather actually loaded.","code":"# install.packages(\"devtools\") devtools::install_github(\"brshallo/funspotr\")"},{"path":"https://brshallo.github.io/funspotr/reference/call_r_list_functions_doc.html","id":null,"dir":"Reference","previous_headings":"","what":"Call R List Functions — call_r_list_functions_doc","title":"Call R List Functions — call_r_list_functions_doc","text":"next several function created make namespaces slightly better -- honestly sure worth added complexity created. essentially: explicit function calls (.e. pkg::fun() ) spot_funs() / spot_funs_custom() run call_r_list_functions() identify functions packages, explicit functions run call_r_list_functions_explicit() thing call_r_list_functions() except first loads regular packages attaches explicit function calls -- impact giving explicit function calls precedence terms identified attaching entire pacakge (way prior approaches ). still problems cases whole think better... functions use import package manage process takes approach described : https://github.com/rticulate/import/issues/57","code":""},{"path":"https://brshallo.github.io/funspotr/reference/call_r_list_functions_doc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call R List Functions — call_r_list_functions_doc","text":"","code":"call_r_list_functions(pkgs, file_temp, show_each_use = FALSE)  call_r_list_functions_explicit(   pkgs,   pkgs_explicit,   file_temp,   show_each_use = FALSE )"},{"path":"https://brshallo.github.io/funspotr/reference/check_pkgs_availability.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Packages Availability — check_pkgs_availability","title":"Check Packages Availability — check_pkgs_availability","text":"See example way may use funspotr.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/check_pkgs_availability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Packages Availability — check_pkgs_availability","text":"","code":"check_pkgs_availability(pkgs, quietly = TRUE)"},{"path":"https://brshallo.github.io/funspotr/reference/check_pkgs_availability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Packages Availability — check_pkgs_availability","text":"pkgs Character vector package names. (Typically output spot_pkgs()). quietly logical: progress error messages suppressed?","code":""},{"path":"https://brshallo.github.io/funspotr/reference/check_pkgs_availability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Packages Availability — check_pkgs_availability","text":"Named logical vector indicating whether package available machine.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/check_pkgs_availability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Packages Availability — check_pkgs_availability","text":"","code":"library(funspotr) library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  file_lines <- \" library(dplyr) require(tidyr) library(madeUpPkg)  as_tibble(mpg) %>%   group_by(class) %>%   nest() %>%   mutate(stats = purrr::map(data,                             ~lm(cty ~ hwy, data = .x)))  made_up_fun() \"  file_output <- tempfile(fileext = \".R\") writeLines(file_lines, file_output)  spot_pkgs(file_output) %>%   check_pkgs_availability() #>     dplyr     tidyr madeUpPkg     purrr  #>      TRUE      TRUE     FALSE      TRUE"},{"path":"https://brshallo.github.io/funspotr/reference/did_safely_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Did Safely Error — did_safely_error","title":"Did Safely Error — did_safely_error","text":"Safely Error","code":""},{"path":"https://brshallo.github.io/funspotr/reference/did_safely_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Did Safely Error — did_safely_error","text":"","code":"did_safely_error(safely_named_list)"},{"path":"https://brshallo.github.io/funspotr/reference/did_safely_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Did Safely Error — did_safely_error","text":"logical vector","code":""},{"path":"https://brshallo.github.io/funspotr/reference/funspotr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"funspotr: Identify Functions & Packages in Files — funspotr-package","title":"funspotr: Identify Functions & Packages in Files — funspotr-package","text":"learn funspotr see https://github.com/brshallo/funspotr","code":""},{"path":[]},{"path":"https://brshallo.github.io/funspotr/reference/funspotr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"funspotr: Identify Functions & Packages in Files — funspotr-package","text":"Maintainer: Bryan Shalloway brshallodev@gmail.com","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_contents.html","id":null,"dir":"Reference","previous_headings":"","what":"Github Contents — github_contents","title":"Github Contents — github_contents","text":"List files folders github repo. inspiration: https://stackoverflow.com//25485782/9059865","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_contents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Github Contents — github_contents","text":"","code":"github_contents(repo, branch = \"main\")"},{"path":"https://brshallo.github.io/funspotr/reference/github_contents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Github Contents — github_contents","text":"repo Github user/repo branch Default \"main\"; \"master\" also common.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_contents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Github Contents — github_contents","text":"Character vector contents github repo.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_contents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Github Contents — github_contents","text":"","code":"funspotr:::github_contents(\"brshallo/feat-eng-lags-presentation\", branch = \"main\") #>  [1] \".gitignore\"                                       #>  [2] \"R\"                                                #>  [3] \"R/Rmd-to-R.R\"                                     #>  [4] \"R/feat-engineering-lags.R\"                        #>  [5] \"R/load-inspections-save-csv.R\"                    #>  [6] \"R/types-of-splits.R\"                              #>  [7] \"README.md\"                                        #>  [8] \"data\"                                             #>  [9] \"data/inspections-restaurants.csv\"                 #> [10] \"feat-eng-lags-presentation.Rproj\"                 #> [11] \"presentations\"                                    #> [12] \"presentations/rstats-wsu.pdf\"                     #> [13] \"presentations/rta-2021.pdf\"                       #> [14] \"presentations/speaking-notes-rta-presentation.md\""},{"path":"https://brshallo.github.io/funspotr/reference/github_contents_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Github Contents and URLS — github_contents_urls","title":"Github Contents and URLS — github_contents_urls","text":"Runs funspotr:::github_contents() maps github_rbf_to_url() returning URL's \"raw\" location.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_contents_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Github Contents and URLS — github_contents_urls","text":"","code":"github_contents_urls(repo, branch = \"main\")"},{"path":"https://brshallo.github.io/funspotr/reference/github_contents_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Github Contents and URLS — github_contents_urls","text":"repo Github user/repo branch Default \"main\"; \"master\" also common.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_contents_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Github Contents and URLS — github_contents_urls","text":"Dataframe columns contents urls.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_contents_urls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Github Contents and URLS — github_contents_urls","text":"","code":"funspotr:::github_contents_urls(\"brshallo/feat-eng-lags-presentation\", branch = \"main\") #> # A tibble: 14 × 2 #>    contents                                         urls                         #>    <chr>                                            <chr>                        #>  1 .gitignore                                       https://raw.githubuserconte… #>  2 R                                                https://raw.githubuserconte… #>  3 R/Rmd-to-R.R                                     https://raw.githubuserconte… #>  4 R/feat-engineering-lags.R                        https://raw.githubuserconte… #>  5 R/load-inspections-save-csv.R                    https://raw.githubuserconte… #>  6 R/types-of-splits.R                              https://raw.githubuserconte… #>  7 README.md                                        https://raw.githubuserconte… #>  8 data                                             https://raw.githubuserconte… #>  9 data/inspections-restaurants.csv                 https://raw.githubuserconte… #> 10 feat-eng-lags-presentation.Rproj                 https://raw.githubuserconte… #> 11 presentations                                    https://raw.githubuserconte… #> 12 presentations/rstats-wsu.pdf                     https://raw.githubuserconte… #> 13 presentations/rta-2021.pdf                       https://raw.githubuserconte… #> 14 presentations/speaking-notes-rta-presentation.md https://raw.githubuserconte…"},{"path":"https://brshallo.github.io/funspotr/reference/github_gists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GitHub Gist Urls — github_gists","title":"Get GitHub Gist Urls — github_gists","text":"Given username, return dataframe gists user. Note (similar github_* functions) run repeatedly may error due hitting github API rate limits.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_gists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GitHub Gist Urls — github_gists","text":"","code":"github_gists(user)"},{"path":"https://brshallo.github.io/funspotr/reference/github_gists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GitHub Gist Urls — github_gists","text":"user Character.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_gists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GitHub Gist Urls — github_gists","text":"Dataframe contents urls file paths.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_gists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get GitHub Gist Urls — github_gists","text":"Returned output filter R Rmarkdown files default, see example typical use funspotr:::str_detect_r_rmd() -- use lot .md files gists probably write something parse R code chunks .md files.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_gists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GitHub Gist Urls — github_gists","text":"","code":"library(dplyr) library(funspotr)  # pulling and analyzing my R file github gists gists_urls <- github_gists(\"brshallo\") %>%   filter(funspotr:::str_detect_r_rmd(contents))  gists_urls #> # A tibble: 36 × 2 #>    contents                                  urls                                #>    <chr>                                     <chr>                               #>  1 show_in_excel.R                           https://gist.githubusercontent.com… #>  2 funspotr-gists-cmparlettpelleriti-ex.R    https://gist.githubusercontent.com… #>  3 custom-ggplot-and-labels.R                https://gist.githubusercontent.com… #>  4 stratified-sampling-parameter-estimates.R https://gist.githubusercontent.com… #>  5 cdf_density.R                             https://gist.githubusercontent.com… #>  6 if_all-if_any-examples.R                  https://gist.githubusercontent.com… #>  7 bootstrap-mean-rsample.R                  https://gist.githubusercontent.com… #>  8 predict-interval-boot-only.R              https://gist.githubusercontent.com… #>  9 source_rmd.R                              https://gist.githubusercontent.com… #> 10 source-rmd-chunks.r                       https://gist.githubusercontent.com… #> # … with 26 more rows  # Will just parse the first 2 files/gists contents <-   github_spot_funs(custom_urls = slice(gists_urls, 1:2)) #> Warning: incomplete final line found on 'https://gist.githubusercontent.com/brshallo/c47169de43f4be62c655200620565697/raw/e92e41b66043e552e19e69dfd9d9f65fda96f4d9/show_in_excel.R'  contents %>%   unnest_github_results() #> # A tibble: 10 × 5 #>    funs                  pkgs      in_multiple_pkgs contents               urls  #>    <chr>                 <chr>     <lgl>            <chr>                  <chr> #>  1 paste0                base      FALSE            show_in_excel.R        http… #>  2 tempfile              base      FALSE            show_in_excel.R        http… #>  3 write.csv             utils     FALSE            show_in_excel.R        http… #>  4 file_show             fs        FALSE            show_in_excel.R        http… #>  5 library               base      FALSE            funspotr-gists-cmparl… http… #>  6 github_gists          funspotr  FALSE            funspotr-gists-cmparl… http… #>  7 filter                dplyr     TRUE             funspotr-gists-cmparl… http… #>  8 str_detect_r_rmd      (unknown) FALSE            funspotr-gists-cmparl… http… #>  9 github_spot_funs      funspotr  FALSE            funspotr-gists-cmparl… http… #> 10 unnest_github_results funspotr  FALSE            funspotr-gists-cmparl… http…"},{"path":"https://brshallo.github.io/funspotr/reference/github_spot_things.html","id":null,"dir":"Reference","previous_headings":"","what":"Spot Packages or Functions from Github Repository — github_spot_pkgs","title":"Spot Packages or Functions from Github Repository — github_spot_pkgs","text":"github_spot_pkgs() : Spot packages show-R Rmarkdown documents github repository. Essentially wrapper mapping spot_pkgs() across multiple files.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_spot_things.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spot Packages or Functions from Github Repository — github_spot_pkgs","text":"","code":"github_spot_pkgs(   repo,   branch = \"main\",   ...,   preview = FALSE,   rmv_index = TRUE,   custom_urls = NULL )  github_spot_funs(   repo,   branch = \"main\",   ...,   preview = FALSE,   rmv_index = TRUE,   custom_urls = NULL )"},{"path":"https://brshallo.github.io/funspotr/reference/github_spot_things.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spot Packages or Functions from Github Repository — github_spot_pkgs","text":"repo Github repository, e.g. \"brshallo/feat-eng-lags-presentation\" branch Branch github repository, default \"main\". ... Arguments passed onto spot_*(). preview Logical, set TRUE return dataframe urls passed spot_funs() spot_pkgs() without parsing files. See README example can combined custom_urls parse subset files identified. rmv_index Logical, repos containing blogdown sites index.R file root. Change TRUE want file removed. custom_urls Option pass dataframe columns contents urls overrride default urls repo parse. Default NULL. See README example.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_spot_things.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spot Packages or Functions from Github Repository — github_spot_pkgs","text":"Dataframe contents urls file paths along list-column spotted containing purrr::safely() lists \"result\" \"error\" file parsed. See unnest_github_results() helper put easier read format.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/github_spot_things.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spot Packages or Functions from Github Repository — github_spot_pkgs","text":"github_spot_funs() : Spot functions corresponding packages show-R Rmarkdown documents github repository. Essentially wrapper mapping spot_pkgs() across multiple files. Meant cases packages scripts file. cases case need build alternative workflow. See unexported functions R/github-spot.R potentially helpful building blocks.","code":""},{"path":[]},{"path":"https://brshallo.github.io/funspotr/reference/github_spot_things.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spot Packages or Functions from Github Repository — github_spot_pkgs","text":"","code":"library(funspotr)  github_spot_funs(\"brshallo/feat-eng-lags-presentation\", branch = \"main\") #> # A tibble: 4 × 3 #>   contents                      urls                                spotted      #>   <chr>                         <chr>                               <list>       #> 1 R/Rmd-to-R.R                  https://raw.githubusercontent.com/… <named list> #> 2 R/feat-engineering-lags.R     https://raw.githubusercontent.com/… <named list> #> 3 R/load-inspections-save-csv.R https://raw.githubusercontent.com/… <named list> #> 4 R/types-of-splits.R           https://raw.githubusercontent.com/… <named list>  # Say you only want to parse a subset of the R file discovered, you could do # something like: library(dplyr)  github_spot_funs(\"brshallo/feat-eng-lags-presentation\", branch = \"main\", preview = TRUE) %>%   slice(1:2) %>%   github_spot_funs(custom_urls = .) #> # A tibble: 2 × 3 #>   contents                  urls                                    spotted      #>   <chr>                     <chr>                                   <list>       #> 1 R/Rmd-to-R.R              https://raw.githubusercontent.com/brsh… <named list> #> 2 R/feat-engineering-lags.R https://raw.githubusercontent.com/brsh… <named list>"},{"path":"https://brshallo.github.io/funspotr/reference/install_missing_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Install missing packages — install_missing_pkgs","title":"Install missing packages — install_missing_pkgs","text":"Attempt install missing packages CRAN.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/install_missing_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install missing packages — install_missing_pkgs","text":"","code":"install_missing_pkgs(pkgs_availability)"},{"path":"https://brshallo.github.io/funspotr/reference/install_missing_pkgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install missing packages — install_missing_pkgs","text":"pkgs_availability Named logical vector names packages -- generally output running check_pkgs_availability().","code":""},{"path":"https://brshallo.github.io/funspotr/reference/install_missing_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install missing packages — install_missing_pkgs","text":"Installs packages cran using remotes::install_cran() available else install.packages()","code":""},{"path":"https://brshallo.github.io/funspotr/reference/install_missing_pkgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Install missing packages — install_missing_pkgs","text":"cases, probably safer clone use renv::dependencies() -- README.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/list_functions_in_file.html","id":null,"dir":"Reference","previous_headings":"","what":"List Functions in File — list_functions_in_file","title":"List Functions in File — list_functions_in_file","text":"Simply wrapper utils::getParseData() . mostly copied : NCmisc::list.functions..file(). Rewrote function made order output dependent packages. Also wanted add show_each_use arg.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/list_functions_in_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Functions in File — list_functions_in_file","text":"","code":"list_functions_in_file(file_path, show_each_use = FALSE)"},{"path":"https://brshallo.github.io/funspotr/reference/list_functions_in_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Functions in File — list_functions_in_file","text":"show_each_use changed TRUE return instance function used rather everything","code":""},{"path":"https://brshallo.github.io/funspotr/reference/list_functions_in_file_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"List Functions in File to Dataframe — list_functions_in_file_to_df","title":"List Functions in File to Dataframe — list_functions_in_file_to_df","text":"helper function converts output funspotr:::list_functions_in_file() tibble cleans-things. ' list_functions_in_file_to_df() last step inside spot_funs() -- check documentation returned output.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/list_functions_in_file_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Functions in File to Dataframe — list_functions_in_file_to_df","text":"","code":"list_functions_in_file_to_df(funs, keep_search_list = FALSE)"},{"path":"https://brshallo.github.io/funspotr/reference/list_functions_in_file_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Functions in File to Dataframe — list_functions_in_file_to_df","text":"funs List output returned running funspotr:::list_functions_in_file() keep_search_list Logical, default TRUE change FALSE include entire search list list-column.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/list_functions_in_file_to_df.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List Functions in File to Dataframe — list_functions_in_file_to_df","text":"Note map_chr(pkgs, 1) step end means keeps version function top fabricated search list. perfect however. also nothing reexported functions etc. (e.g. as_tibble() home tibble reexported dplyr tidyr -- meaningless spot_funs() though just looking top search space via utils::find())","code":""},{"path":"https://brshallo.github.io/funspotr/reference/network_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Funspotr Network Plot — network_plot","title":"Funspotr Network Plot — network_plot","text":"Output simple network plot using visNetwork connecting either funs pkgs contents/urls.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/network_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Funspotr Network Plot — network_plot","text":"","code":"network_plot(df, to = pkgs, show_each_use = FALSE)"},{"path":"https://brshallo.github.io/funspotr/reference/network_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Funspotr Network Plot — network_plot","text":"df Dataframe containing columns contents, urls either funs pkgs. Generally output running: github_spot_*() %>% unnest_github_results() funs pkgs show_each_use Binary, default FALSE. TRUE edge thickness based number times package function used.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/network_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Funspotr Network Plot — network_plot","text":"visNetwork plot","code":""},{"path":"https://brshallo.github.io/funspotr/reference/network_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Funspotr Network Plot — network_plot","text":"","code":"library(dplyr) library(funspotr)  gh_ex_pkgs <- github_spot_pkgs(   repo = \"brshallo/feat-eng-lags-presentation\",   branch = \"main\")  gh_ex_pkgs %>%   unnest_github_results() %>%   network_plot(to = pkgs) #> Error in x$width %||% settings$fig.width * settings$dpi: non-numeric argument to binary operator"},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs.html","id":null,"dir":"Reference","previous_headings":"","what":"Spot Functions — spot_funs","title":"Spot Functions — spot_funs","text":"Given file_path extract functions associated packages specified file.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spot Functions — spot_funs","text":"","code":"spot_funs(file_path, ...)"},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spot Functions — spot_funs","text":"file_path character vector path file. ... allows pass additional arguments spot_funs_custom().","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spot Functions — spot_funs","text":"Given default arguments missing packages, dataframe following columns returned: funs: specifying functions file. pkgs: package function came . funs custom function came package installed machine, pkgs return \"(unknown)\". in_multiple_pkgs: logical, whether function exists multiple packages loaded (.e. search space utils::find(). Note unused loaded packages/ pkgs dropped output. functions without available package returned value \"(unknown)\". See README documentation.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spot Functions — spot_funs","text":"spot_funs() uses spot_funs_custom() run -- less verbose version require passing packages separately. See README ?spot_funs_custom details function works arguments can passed (via ...). code syntax malformed properly parsed, function error.","code":""},{"path":[]},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spot Functions — spot_funs","text":"","code":"library(funspotr)  file_lines <- \" library(dplyr) require(tidyr) library(madeUpPkg)  as_tibble(mpg) %>%   group_by(class) %>%   nest() %>%   mutate(stats = purrr::map(data,                             ~lm(cty ~ hwy, data = .x)))  made_up_fun() \"  file_output <- tempfile(fileext = \".R\") writeLines(file_lines, file_output)  spot_funs(file_output) #> # A tibble: 9 × 3 #>   funs        pkgs      in_multiple_pkgs #>   <chr>       <chr>     <lgl>            #> 1 library     base      FALSE            #> 2 require     base      FALSE            #> 3 as_tibble   tidyr     TRUE             #> 4 group_by    dplyr     FALSE            #> 5 nest        tidyr     FALSE            #> 6 mutate      dplyr     FALSE            #> 7 map         purrr     FALSE            #> 8 lm          stats     FALSE            #> 9 made_up_fun (unknown) FALSE"},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs_custom.html","id":null,"dir":"Reference","previous_headings":"","what":"Spot Functions Custom — spot_funs_custom","title":"Spot Functions Custom — spot_funs_custom","text":"Engine runs spot_funs(). spot_funs_custom() options changing returned output producing print statements errors. also requires provide character vector pkgs rather identifying automatically via spot_pkgs().","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs_custom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spot Functions Custom — spot_funs_custom","text":"","code":"spot_funs_custom(   pkgs,   file_path,   show_each_use = FALSE,   keep_search_list = FALSE,   copy_local = TRUE,   print_pkgs_load_status = FALSE,   error_if_missing_pkg = FALSE )"},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs_custom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spot Functions Custom — spot_funs_custom","text":"pkgs Character vector packages added search space via require() import::() can found utils::find(). Generally returned value spot_pkgs(file_path, show_explicit_funs = TRUE). file_path character vector path file. show_each_use Logical, default FALSE. changed TRUE return individual rows time function used (rather just entire file). keep_search_list Logical, default TRUE. changed FALSE include entire search list function. May helpful debugging cases funspotr may good job recreating search list identifying packages function(s) came . print packages search list function. copy_local Logical, changed FALSE copy local temporary folder prior analysis. Many functions require file already .R file file exist locally. generally set TRUE unless hold. print_pkgs_load_status Logical, default FALSE. set TRUE print named vector logicals showing whether packages machine along warning messages come running require(). continue produce output function. error_if_missing_pkg Logical, default FALSE. set TRUE print_pkgs_load_status = TRUE automatically. package installed machine print load status individual pkgs result error.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs_custom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spot Functions Custom — spot_funs_custom","text":"Given default arguments missing packages, dataframe following columns returned: funs: specifying functions file. pkgs: package function came . funs custom function came package installed machine, pkgs return \"(unknown)\". in_multiple_pkgs: logical, whether function exists multiple packages loaded (.e. search space utils::find(). Note unused loaded packages/ pkgs dropped output. functions without available package returned value \"(unknown)\". See README documentation.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs_custom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spot Functions Custom — spot_funs_custom","text":"spot_funs_custom() use cases trust spot_pkgs() properly identify package dependencies within file instead want pass character vector packages. WORKS: See README package included pkgs, functions called come package assigned value \"(unknown)\" pkgs column returned output. can also use print_pkgs_load_status error_if_missing_pkg arguments alter output works cases packages machine. Explicit calls unexported functinos .e. pkg:::fun() pkgs = \"(unknown)\" returned dataframe.","code":""},{"path":[]},{"path":"https://brshallo.github.io/funspotr/reference/spot_funs_custom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spot Functions Custom — spot_funs_custom","text":"","code":"library(funspotr)  file_lines <- \" library(dplyr) require(tidyr) library(madeUpPkg)  as_tibble(mpg) %>%   group_by(class) %>%   nest() %>%   mutate(stats = purrr::map(data,                             ~lm(cty ~ hwy, data = .x)))  made_up_fun() \"  file_output <- tempfile(fileext = \".R\") writeLines(file_lines, file_output)  pkgs <- spot_pkgs(file_output)  spot_funs_custom(pkgs, file_output) #> # A tibble: 9 × 3 #>   funs        pkgs      in_multiple_pkgs #>   <chr>       <chr>     <lgl>            #> 1 library     base      FALSE            #> 2 require     base      FALSE            #> 3 as_tibble   tidyr     TRUE             #> 4 group_by    dplyr     FALSE            #> 5 nest        tidyr     FALSE            #> 6 mutate      dplyr     FALSE            #> 7 map         purrr     FALSE            #> 8 lm          stats     FALSE            #> 9 made_up_fun (unknown) FALSE             # If you'd rather it error when a pkg doesn't exist (e.g. {madeUpPkg}) # You could run: # spot_funs_custom(pkgs, file_output, error_if_missing_pkg = TRUE)"},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Spot packages loaded or used in file — spot_pkgs","title":"Spot packages loaded or used in file — spot_pkgs","text":"Extract pkg called either library(pkg), require(pkg) requireNamespace(\"pkg\") pkg::fun(). identify packages loaded ways typically done interactive R scripts (e.g. relying DESCRIPTION file pkg something like source(\"lib-calls.R\")). Inspiration: https://github.com/rstudio/blogdown/issues/647","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spot packages loaded or used in file — spot_pkgs","text":"","code":"spot_pkgs(   file_path,   show_explicit_funs = FALSE,   copy_local = TRUE,   as_yaml_tags = FALSE )"},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spot packages loaded or used in file — spot_pkgs","text":"file_path String path file interest. show_explicit_funs cases function called explicitly, show package dependency function together. example script containing dplyr::select() (opposed library(dplyr); select()) spot_pkgs(show_explicit_funs = TRUE) return item \"dplyr::select\" rather just \"dplyr\") copy_local Logical, changed FALSE copy local temporary folder prior analysis. Many processes require file already .R file file exist locally, hence usually set TRUE unless known case. as_yaml_tags Logical, default FALSE. set TRUE flattens puts format convenient pasting \"tags\" section blogdown post Rmd document.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spot packages loaded or used in file — spot_pkgs","text":"Character vector packages loaded file (cases show_explicit_funs = TRUE explicit calls package, \"pkg:fun\").","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spot packages loaded or used in file — spot_pkgs","text":"Packages extracted solely based text -- whether package actually exists . Hence even packages installed machine show-script returned character vector.","code":""},{"path":[]},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spot packages loaded or used in file — spot_pkgs","text":"","code":"library(funspotr)  file_lines <- \" library(dplyr) require(tidyr) library(madeUpPkg)  as_tibble(mpg) %>%   group_by(class) %>%   nest() %>%   mutate(stats = purrr::map(data,                             ~lm(cty ~ hwy, data = .x)))  made_up_fun() \"  file_output <- tempfile(fileext = \".R\") writeLines(file_lines, file_output)  spot_pkgs(file_output) #> [1] \"dplyr\"     \"tidyr\"     \"madeUpPkg\" \"purrr\"      # To view `purrr::map` as an explicit call spot_pkgs(file_output, show_explicit_funs = TRUE) #> [1] \"dplyr\"      \"tidyr\"      \"madeUpPkg\"  \"purrr::map\"  # To output for blogdown post YAML header tags cat(spot_pkgs(file_output, as_yaml_tags = TRUE)) #>   - dplyr #>   - tidyr #>   - madeUpPkg #>   - purrr"},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_from_DESCRIPTION.html","id":null,"dir":"Reference","previous_headings":"","what":"Spot package dependencies from DESCRIPTION file — spot_pkgs_from_DESCRIPTION","title":"Spot package dependencies from DESCRIPTION file — spot_pkgs_from_DESCRIPTION","text":"Given explicit path DESCRIPTION file return package dependencies therein. inspiration: https://stackoverflow.com//30225680/9059865","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_from_DESCRIPTION.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spot package dependencies from DESCRIPTION file — spot_pkgs_from_DESCRIPTION","text":"","code":"spot_pkgs_from_DESCRIPTION(DESCRIPTION_path)"},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_from_DESCRIPTION.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spot package dependencies from DESCRIPTION file — spot_pkgs_from_DESCRIPTION","text":"DESCRIPTION_path Path DESCRIPTION file","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_from_DESCRIPTION.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spot package dependencies from DESCRIPTION file — spot_pkgs_from_DESCRIPTION","text":"Character vector packages.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_from_DESCRIPTION.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spot package dependencies from DESCRIPTION file — spot_pkgs_from_DESCRIPTION","text":"","code":"funspotr:::spot_pkgs_from_DESCRIPTION(   \"https://raw.githubusercontent.com/brshallo/animatrixr/master/DESCRIPTION\" ) #> [1] \"dplyr\"      \"purrr\"      \"ggplot2\"    \"gganimate\"  \"knitr\"      #> [6] \"rmarkdown\"  \"datasauRus\""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_used.html","id":null,"dir":"Reference","previous_headings":"","what":"Spot Packages Used — spot_pkgs_used","title":"Spot Packages Used — spot_pkgs_used","text":"Primarily used cases load metapackages like tidyverse tidymodels want return packages actually used. E.g. say library(tidyverse) call end-using functions dplyr -- spot_pkgs() return \"tidyverse\" spot_pkgs_used() woudl return \"dplyr\".","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_used.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spot Packages Used — spot_pkgs_used","text":"","code":"spot_pkgs_used(file_path, as_yaml_tags = FALSE)"},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_used.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spot Packages Used — spot_pkgs_used","text":"file_path String path file interest. as_yaml_tags Logical, default FALSE. set TRUE flattens puts format convenient pasting \"tags\" section blogdown post Rmd document.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_used.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spot Packages Used — spot_pkgs_used","text":"Character vector packages functions used file.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_pkgs_used.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spot Packages Used — spot_pkgs_used","text":"essentially just calling spot_funs() %>% (unique(pkgs)) background. many options spot_pkgs() though.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Spot Tags — spot_tags","title":"Spot Tags — spot_tags","text":"Put function blogdown post's YAML header packages packages used post (wrapper around funspotr::spot_pkgs()).","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spot Tags — spot_tags","text":"","code":"spot_tags(   file_path = knitr::current_input(),   used = FALSE,   drop_knitr = FALSE,   ... )"},{"path":"https://brshallo.github.io/funspotr/reference/spot_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spot Tags — spot_tags","text":"file_path Default file knitted can change file (e.g. cases code post may reside different file). used Default FALSE. TRUE pass show_pkgs_used() rather show_pkgs(). (Mainly useful showing actual packages used rather meta-packages called like tidyverse tidymodels). drop_knitr Many blogdown posts knitr::opts_chunk$set() may want tag showing-. Default keep , set FALSE drop \"knitr\" tagged. better approach may just skip \"setup\" chunk parsing... ... additional arguments pass spot_pkgs*().","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spot Tags — spot_tags","text":"String format meant inserted tags argument YAML header.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/spot_tags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spot Tags — spot_tags","text":"Thanks Yihui getting working suggesting function! Note requires blogdown >= 1.9 work (https://github.com/rstudio/blogdown/issues/647).","code":"tags: [\"`r funspotr::spot_tags()`\"]"},{"path":[]},{"path":"https://brshallo.github.io/funspotr/reference/spot_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spot Tags — spot_tags","text":"","code":"# Put this in your blogdown posts YAML header to autogenerate tags based on pkgs # tags: [\"`r funspotr::spot_tags()`\"]"},{"path":"https://brshallo.github.io/funspotr/reference/str_detect_r_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"String Detect R or Rmarkdown File endings — str_detect_r_rmd","title":"String Detect R or Rmarkdown File endings — str_detect_r_rmd","text":"Return TRUE R Rmarkdown files, else FALSE.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/str_detect_r_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String Detect R or Rmarkdown File endings — str_detect_r_rmd","text":"","code":"str_detect_r_rmd(contents, rmv_index = TRUE)"},{"path":"https://brshallo.github.io/funspotr/reference/str_detect_r_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"String Detect R or Rmarkdown File endings — str_detect_r_rmd","text":"contents Character vector file path. rmv_index Logical, repos containing blogdown sites index.R file root. Change TRUE want file removed.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/str_detect_r_rmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"String Detect R or Rmarkdown File endings — str_detect_r_rmd","text":"Logical vector.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/str_detect_r_rmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"String Detect R or Rmarkdown File endings — str_detect_r_rmd","text":"","code":"files <- c(\"file1.R\", \"file2.Rmd\", \"file3.Rmarkdown\", \"file4.Rproj\") funspotr:::str_detect_r_rmd(files) #> [1]  TRUE  TRUE  TRUE FALSE"},{"path":"https://brshallo.github.io/funspotr/reference/unnest_github_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest Github Results — unnest_github_results","title":"Unnest Github Results — unnest_github_results","text":"running github_spot()","code":""},{"path":"https://brshallo.github.io/funspotr/reference/unnest_github_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest Github Results — unnest_github_results","text":"","code":"unnest_github_results(df)"},{"path":"https://brshallo.github.io/funspotr/reference/unnest_github_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest Github Results — unnest_github_results","text":"df Dataframe outputted github_spot*() contains spotted list-column.","code":""},{"path":"https://brshallo.github.io/funspotr/reference/unnest_github_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest Github Results — unnest_github_results","text":"unnested dataframe","code":""},{"path":"https://brshallo.github.io/funspotr/reference/unnest_github_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unnest Github Results — unnest_github_results","text":"","code":"library(funspotr) library(dplyr)  github_spot_funs(\"brshallo/feat-eng-lags-presentation\", branch = \"main\") %>%   unnest_github_results() #> # A tibble: 114 × 5 #>    funs            pkgs      in_multiple_pkgs contents                  urls     #>    <chr>           <chr>     <lgl>            <chr>                     <chr>    #>  1 purl            knitr     FALSE            R/Rmd-to-R.R              https:/… #>  2 here            (unknown) FALSE            R/Rmd-to-R.R              https:/… #>  3 getOption       base      FALSE            R/feat-engineering-lags.R https:/… #>  4 options         base      FALSE            R/feat-engineering-lags.R https:/… #>  5 library         base      FALSE            R/feat-engineering-lags.R https:/… #>  6 read_csv        (unknown) FALSE            R/feat-engineering-lags.R https:/… #>  7 arrange         (unknown) FALSE            R/feat-engineering-lags.R https:/… #>  8 mutate          (unknown) FALSE            R/feat-engineering-lags.R https:/… #>  9 slide_index_dbl (unknown) FALSE            R/feat-engineering-lags.R https:/… #> 10 days            (unknown) FALSE            R/feat-engineering-lags.R https:/… #> # … with 104 more rows"}]
